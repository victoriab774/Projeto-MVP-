from apiclient import discovery
from httplib2 import Http
from oauth2client import file, client, tools

# Escopo da API do Google Forms
SCOPES = "https://www.googleapis.com/auth/forms.body"
DISCOVERY_DOC = "https://forms.googleapis.com/$discovery/rest?version=v1"

# Autentica√ß√£o
store = file.Storage("token.json")
creds = store.get()
if not creds or creds.invalid:
    flow = client.flow_from_clientsecrets("credentials.json", SCOPES)
    creds = tools.run_flow(flow, store)

# Conectar √† API do Forms
form_service = discovery.build(
    "forms", "v1",
    http=creds.authorize(Http()),
    discoveryServiceUrl=DISCOVERY_DOC,
    static_discovery=False,
)

# Cria√ß√£o inicial do formul√°rio (apenas t√≠tulo permitido)
form = form_service.forms().create(body={
    "info": {
        "title": "Question√°rio: Pr√°ticas de TI Verde"
    }
}).execute()

form_id = form["formId"]
print("üìù Formul√°rio criado com sucesso!")
print(f"üîó Link de edi√ß√£o: https://docs.google.com/forms/d/e/1FAIpQLSdAizWBQW1gHtRv5U8wAWJwZ3cCWVqe2yi-1imSVMpnUdVHhg/viewform")

# üßæ Adicionar descri√ß√£o e perguntas via batchUpdate

# Fun√ß√£o para montar op√ß√µes
def opcoes(lista):
    return [{"value": item} for item in lista]

# Descri√ß√£o + perguntas
requests = [
    {
        "updateFormInfo": {
            "info": {
                "description": "Este formul√°rio foi gerado automaticamente via API para levantamento de pr√°ticas de TI Verde. Por favor, responda todas as quest√µes.",
            },
            "updateMask": "description"
        }
    }
]

# Lista das perguntas
perguntas = [
    {
        "titulo": "Qual √© o seu cargo atual na organiza√ß√£o?",
        "tipo": "RADIO",
        "opcoes": ["Analista de TI", "Desenvolvedor(a)", "Gestor(a) de TI", "Suporte T√©cnico", "Outros"]
    },
    {
        "titulo": "H√° quanto tempo voc√™ trabalha na √°rea de TI na organiza√ß√£o atual?",
        "tipo": "RADIO",
        "opcoes": ["Menos de 1 ano", "1 a 5 anos", "6 a 10 anos", "11 anos ou mais"]
    },
    {
        "titulo": "Qual √© o porte da organiza√ß√£o onde voc√™ trabalha?",
        "tipo": "RADIO",
        "opcoes": ["Microempresa", "Pequena empresa", "M√©dia empresa", "Grande empresa"]
    },
    {
        "titulo": "Qual √© o principal setor de atua√ß√£o da organiza√ß√£o?",
        "tipo": "RADIO",
        "opcoes": ["Tecnologia da Informa√ß√£o", "Ind√∫stria", "Servi√ßos", "Com√©rcio", "Outro"]
    },
    {
        "titulo": "Qual √© o modelo de trabalho da sua equipe atualmente?",
        "tipo": "RADIO",
        "opcoes": ["Presencial", "H√≠brido", "Remoto"]
    },
    {
        "titulo": "A organiza√ß√£o onde voc√™ trabalha possui pol√≠ticas ou iniciativas de TI Verde documentadas?",
        "tipo": "RADIO",
        "opcoes": ["Sim", "N√£o", "N√£o sei informar"]
    },
    {
        "titulo": "Quais pr√°ticas de TI Verde s√£o aplicadas em sua organiza√ß√£o?",
        "tipo": "CHECKBOX",
        "opcoes": [
            "Reciclagem de equipamentos",
            "Virtualiza√ß√£o de servidores",
            "Redu√ß√£o de impress√µes",
            "Cloud computing sustent√°vel",
            "Equipamentos ecol√≥gicos",
            "Teletrabalho",
            "Outra(s)"
        ]
    },
    {
        "titulo": "No seu time, h√° alguma pr√°tica de TI Verde sendo aplicada regularmente?",
        "tipo": "RADIO",
        "opcoes": [
            "Sim, frequentemente",
            "Sim, ocasionalmente",
            "N√£o h√° pr√°ticas estruturadas",
            "N√£o sei informar"
        ]
    },
    {
        "titulo": "Com que frequ√™ncia pr√°ticas de economia de energia s√£o promovidas?",
        "tipo": "RADIO",
        "opcoes": ["Sempre", "√Äs vezes", "Raramente", "Nunca"]
    },
    {
        "titulo": "Voc√™ acredita que a ado√ß√£o de TI Verde melhora a imagem da organiza√ß√£o?",
        "tipo": "RADIO",
        "opcoes": [
            "Concordo totalmente",
            "Concordo parcialmente",
            "Neutro",
            "Discordo parcialmente",
            "Discordo totalmente"
        ]
    },
    {
        "titulo": "Quais benef√≠cios a TI Verde traz para sua organiza√ß√£o?",
        "tipo": "CHECKBOX",
        "opcoes": [
            "Redu√ß√£o de custos",
            "Melhoria da imagem institucional",
            "Cumprimento de normas ambientais",
            "Engajamento dos colaboradores",
            "Nenhum benef√≠cio percebido",
            "Outros"
        ]
    },
    {
        "titulo": "Quais barreiras voc√™ enxerga para a ado√ß√£o de pr√°ticas de TI Verde?",
        "tipo": "RADIO",
        "opcoes": [
            "Falta de recursos financeiros",
            "Falta de conhecimento t√©cnico",
            "Falta de interesse da gest√£o",
            "Dificuldade de adapta√ß√£o",
            "Outras"
        ]
    },
    {
        "titulo": "Qual seria a principal a√ß√£o para incentivar pr√°ticas de TI Verde no seu time?",
        "tipo": "RADIO",
        "opcoes": [
            "Treinamento",
            "Metas sustent√°veis",
            "Tecnologias verdes",
            "Divulga√ß√£o de boas pr√°ticas",
            "Outros"
        ]
    },
    {
        "titulo": "Voc√™ se sente motivado(a) a propor pr√°ticas de TI Verde no trabalho?",
        "tipo": "RADIO",
        "opcoes": ["Sim", "Talvez", "N√£o"]
    },
    {
        "titulo": "Qu√£o interessado(a) voc√™ estaria em participar de projetos de TI Verde?",
        "tipo": "RADIO",
        "opcoes": [
            "Muito interessado(a)",
            "Interessado(a)",
            "Neutro",
            "Pouco interessado(a)",
            "Sem interesse"
        ]
    }
]

# Adiciona cada pergunta como nova requisi√ß√£o
for idx, p in enumerate(perguntas):
    tipo = "RADIO" if p["tipo"] == "RADIO" else "CHECKBOX"
    requests.append({
        "createItem": {
            "item": {
                "title": p["titulo"],
                "questionItem": {
                    "question": {
                        "required": True,
                        "choiceQuestion": {
                            "type": tipo,
                            "options": opcoes(p["opcoes"]),
                            "shuffle": False
                        }
                    }
                }
            },
            "location": {"index": idx}
        }
    })

# Enviar todas as perguntas e descri√ß√£o de uma vez
form_service.forms().batchUpdate(formId=form_id, body={"requests": requests}).execute()
print("‚úÖ Perguntas e descri√ß√£o adicionadas com sucesso!")
